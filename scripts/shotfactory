#!/usr/bin/env python
# Copyright (C) 2006 Johann C. Rocholl <johann@browsershots.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Screenshot factory.
"""

__revision__ = '$Rev$'
__date__ = '$Date$'
__author__ = '$Author$'

import sys, os, time, xmlrpclib
from md5 import md5

pngfilename = 'browsershot.png'
arg0, server_url, factory_name = sys.argv

def crypt_password(challenge, password):
    """
    Encrypt a password for transmission.
    """
    salt = challenge[:4]
    nonce = challenge[4:]
    crypt = md5(salt + password).hexdigest()
    crypt = md5(crypt + nonce).hexdigest()
    return crypt

def browsershot(server, password, challenge):
    """
    Process a screenshot request and upload the resulting PNG file.
    """
    # Ask server for a matching screenshot request
    crypt = crypt_password(challenge, password)
    status, challenge, options = server.request.poll(factory_name, crypt)
    print status, challenge
    print options
    if status != 'OK':
        raise RuntimeError(status)

    # Start browser
    os.system('killall firefox-bin')
    nonce = challenge[4:]
    url = '%s/redirect/%s' % (server_url, nonce)
    os.system('firefox "%s" &' % url)
    time.sleep(10)

    # Make screenshots
    if os.path.exists(pngfilename):
        os.remove(pngfilename)
    error = os.system('browsershot')
    assert not error

    # Upload PNG file
    binary = xmlrpclib.Binary(file(pngfilename).read())
    crypt = crypt_password(challenge, password)
    response = server.request.upload(binary, crypt)
    print response

def main():
    """
    Main loop for screenshot factory.
    """
    server = xmlrpclib.Server(server_url)
    password = 'secret'
    challenge = server.auth.challenge(factory_name)
    browsershot(server, password, challenge)

if __name__ == '__main__':
    main()
